set(TARGET kpimg)

set(OUTPUT_PREFIX CMakeFiles/kpimg.elf.dir/src/kp/kernel)
configure_file(
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kpimg.lds.in
    ${CMAKE_CURRENT_BINARY_DIR}/kpimg.lds
    @ONLY
)

set(BASE_SOURCES
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/setup.c 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/setup1.S
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/cache.S
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/tlsf.c
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/start.c 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/map.c 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/map1.S 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/hook.c 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/fphook.c 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/hmem.c 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/predata.c 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/symbol.c 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/baselib.c 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/base/sha256.c 
)

file(GLOB PATCH_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/patch/*.c")
file(GLOB PATCH_COMMON_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/patch/common/*.c")
file(GLOB PATCH_MODULE_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/patch/module/*.c")
file(GLOB PATCH_KSYMS_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/patch/ksyms/*.c")
list(APPEND BASE_SOURCES 
    ${PATCH_SRCS} ${PATCH_COMMON_SRCS} ${PATCH_MODULE_SRCS} ${PATCH_KSYMS_SRCS}
)

if(KPIMG_WITH_ANDROID)
    file(GLOB PATCH_ANDROID_SRCS "${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/patch/android/*.c")
    list(APPEND BASE_SOURCES ${PATCH_ANDROID_SRCS})
endif()

add_executable(${TARGET}.elf ${BASE_SOURCES})
target_compile_options(${TARGET}.elf PRIVATE -Wall -fno-builtin -std=gnu11 -nostdinc)
target_compile_options(${TARGET}.elf PRIVATE -g)
if (KPIMG_DEBUG)
    target_compile_options(${TARGET}.elf PRIVATE -DDEBUG -DMAP_DEBUG -g)
endif()

if(KPIMG_WITH_ANDROID)
    target_compile_definitions(${TARGET}.elf PRIVATE -DANDROID)
endif()
target_include_directories(${TARGET}.elf PRIVATE 
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/include
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/patch/include
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/linux
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/linux/include
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/linux/arch/arm64/include
    ${CMAKE_CURRENT_SOURCE_DIR}/src/kp/kernel/linux/tools/arch/arm64/include
)

target_compile_options(${TARGET}.elf PRIVATE
    "$<$<COMPILE_LANGUAGE:C>:-O2>"
)
target_compile_options(${TARGET}.elf PRIVATE
    "$<$<COMPILE_LANGUAGE:ASM>:>"
)

add_custom_command(
    OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${TARGET}"
    COMMAND ${CMAKE_OBJCOPY} -O binary -S ${TARGET}.elf ${TARGET}
    DEPENDS ${TARGET}.elf
    COMMENT "Generating ${TARGET} from ${TARGET}.elf"
)

add_custom_target(${TARGET}.bin ALL
    DEPENDS "${CMAKE_CURRENT_BINARY_DIR}/${TARGET}"
    COMMENT "Build ${TARGET}"
)